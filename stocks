import pandas as pd
from statsmodels.tsa.arima.model import ARIMA
from statsmodels.tsa.holtwinters import ExponentialSmoothing
from statsmodels.tsa.api import Holt
import re
import warnings
warnings.filterwarnings('ignore')
%matplotlib inline
import pickle

  
""" while(True):  
    #Stock=input("Predict Stock price:Choose AAPL,ADP,CBOE,CSCO,EBAY")
    Stock='AAPL'
    #print(Stock)
    if (Stock != 'ADP')&(Stock!='AAPL')&(Stock!='CSCO')&(Stock!='CBOE')&(Stock!='EBAY'):
        print("Select the right option!!")
        continue
    #steps=input("For How many days forescast to be done?Enter no of days")
    steps='10'
    if (steps.isnumeric()==False) | (steps=='0'):
        print("enter correct no of days")
        continue
    if (Stock=='AAPL'):
        df_AAPL = df1[['NASDAQ.AAPL']]
        model_DES = Holt(df_AAPL,exponential=False, initialization_method='estimated')
        model_DES = model_DES.fit(optimized=True)
        forecast_AAPL = model_DES.forecast(int(steps))
        print(forecast_AAPL)    
    elif (Stock=='ADP'):
        df_ADP = df1[['NASDAQ.ADP']]
        model = ARIMA(df_ADP, order=(1,1,1))
        results= model.fit()
        forecast_ADP = results.forecast(int(steps))
        print(forecast_ADP)   
        break
    elif (Stock=='CBOE'):
        df_CBOE = df1[['NASDAQ.CBOE']]
        model_TES_add =ExponentialSmoothing(df_CBOE,trend='multiplicative',seasonal='additive',initialization_method='estimated')
        model_TES_add = model_TES_add.fit(optimized=True)
        forecast_CBOE = model_TES_add.forecast(int(steps))
        print(forecast_CBOE)
        break
    elif (Stock=='CSCO'):
        df_CSCO = df1[['NASDAQ.CSCO']]
        model = ARIMA(df_CSCO, order=(2,1,1))
        results= model.fit()
        forecast_CSCO= results.forecast(int(steps))
        print(forecast_CSCO)
        break
    elif (Stock=='EBAY'):
        df_EBAY = df1[['NASDAQ.EBAY']]
        model = ARIMA(df_EBAY, order=(1,1,1))
        results= model.fit()
        forecast_EBAY= results.forecast(int(steps))
        print(forecast_EBAY)
        break
    elif((Stock!='ADP')&(Stock!='APPL')&(Stock!='CSCO')&(Stock!='CBOE')&(Stock!='EBAY')):
        print("Select the right option!!")"""
Stock=='AAPL'
steps='10'
df_AAPL = df1[['NASDAQ.AAPL']]
model_DES = Holt(df_AAPL,exponential=False, initialization_method='estimated')
model_DES = model_DES.fit(optimized=True)

#pickle.dump(regressor, open('model.pkl','wb'))
pickle.dump(model_DES, open('model.pkl','wb'))
model = pickle.load(open('model.pkl','rb'))
forecast_AAPL = model_DES.forecast(int(steps))
print(forecast_AAPL)    
#print(model.predict([[4,300,500]]))
        